/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('../../src/simple-notifications.component');
var import1 = require('@angular/core/src/change_detection/change_detection');
var import2 = require('@angular/core/src/linker/view_utils');
var import3 = require('@angular/core/src/linker/view');
var import5 = require('@angular/core/src/linker/element');
var import7 = require('@angular/core/src/linker/view_type');
var import8 = require('../../src/notifications.service');
var import9 = require('@angular/core/src/metadata/view');
var import10 = require('@angular/core/src/linker/component_factory');
var import11 = require('../node_modules/@angular/common/src/directives/ng_class.ngfactory');
var import12 = require('../node_modules/@angular/common/src/directives/ng_for.ngfactory');
var import13 = require('@angular/core/src/change_detection/differs/iterable_differs');
var import14 = require('@angular/core/src/change_detection/differs/keyvalue_differs');
var import15 = require('@angular/core/src/linker/element_ref');
var import16 = require('@angular/core/src/linker/template_ref');
var import17 = require('@angular/common/src/directives/ng_for');
var import18 = require('@angular/common/src/directives/ng_class');
var import19 = require('./notification.component.ngfactory');
var import20 = require('@angular/platform-browser/src/security/dom_sanitization_service');
var import21 = require('@angular/core/src/zone/ng_zone');
var import22 = require('../../src/notification.component');
var Wrapper_SimpleNotificationsComponent = (function () {
    function Wrapper_SimpleNotificationsComponent(p0) {
        this.changed = false;
        this.context = new import0.SimpleNotificationsComponent(p0);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_SimpleNotificationsComponent.prototype.check_options = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this.changed = true;
            this.context.options = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_SimpleNotificationsComponent.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_SimpleNotificationsComponent.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
    };
    return Wrapper_SimpleNotificationsComponent;
}());
exports.Wrapper_SimpleNotificationsComponent = Wrapper_SimpleNotificationsComponent;
var renderType_SimpleNotificationsComponent_Host = null;
var _View_SimpleNotificationsComponent_Host0 = (function (_super) {
    __extends(_View_SimpleNotificationsComponent_Host0, _super);
    function _View_SimpleNotificationsComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_SimpleNotificationsComponent_Host0, renderType_SimpleNotificationsComponent_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_SimpleNotificationsComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import2.selectOrCreateRenderHostElement(this.renderer, 'simple-notifications', import2.EMPTY_INLINE_ARRAY, rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_SimpleNotificationsComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._SimpleNotificationsComponent_0_4 = new Wrapper_SimpleNotificationsComponent(this.parentInjector.get(import8.NotificationsService));
        this._appEl_0.initComponent(this._SimpleNotificationsComponent_0_4.context, [], compView_0);
        compView_0.create(this._SimpleNotificationsComponent_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_SimpleNotificationsComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.SimpleNotificationsComponent) && (0 === requestNodeIndex))) {
            return this._SimpleNotificationsComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_SimpleNotificationsComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._SimpleNotificationsComponent_0_4.detectChangesInInputProps(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this._SimpleNotificationsComponent_0_4.detectChangesInHostProps(this, this._el_0, throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_SimpleNotificationsComponent_Host0.prototype.destroyInternal = function () {
        this._SimpleNotificationsComponent_0_4.context.ngOnDestroy();
    };
    return _View_SimpleNotificationsComponent_Host0;
}(import3.AppView));
function viewFactory_SimpleNotificationsComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_SimpleNotificationsComponent_Host === null)) {
        (renderType_SimpleNotificationsComponent_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_SimpleNotificationsComponent_Host0(viewUtils, parentInjector, declarationEl);
}
exports.SimpleNotificationsComponentNgFactory = new import10.ComponentFactory('simple-notifications', viewFactory_SimpleNotificationsComponent_Host0, import0.SimpleNotificationsComponent);
var styles_SimpleNotificationsComponent = ['\n        .simple-notification-wrapper {\n            position: fixed;\n            width: 300px;\n            z-index: 1000;\n        }\n        \n        .simple-notification-wrapper.left { left: 20px; }\n        .simple-notification-wrapper.top { top: 20px; }\n        .simple-notification-wrapper.right { right: 20px; }\n        .simple-notification-wrapper.bottom { bottom: 20px; }\n        \n        @media (max-width: 340px) {\n            .simple-notification-wrapper {\n                width: auto;\n                left: 20px;\n                right: 20px;\n            }\n        }\n    '];
var renderType_SimpleNotificationsComponent = null;
var _View_SimpleNotificationsComponent0 = (function (_super) {
    __extends(_View_SimpleNotificationsComponent0, _super);
    function _View_SimpleNotificationsComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_SimpleNotificationsComponent0, renderType_SimpleNotificationsComponent, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_SimpleNotificationsComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n        ', null);
        this._el_1 = import2.createRenderElement(this.renderer, parentRenderNode, 'div', new import2.InlineArray2(2, 'class', 'simple-notification-wrapper'), null);
        this._NgClass_1_3 = new import11.Wrapper_NgClass(this.parentInjector.get(import13.IterableDiffers), this.parentInjector.get(import14.KeyValueDiffers), new import15.ElementRef(this._el_1), this.renderer);
        this._text_2 = this.renderer.createText(this._el_1, '\n            ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._appEl_3 = new import5.AppElement(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import16.TemplateRef_(this._appEl_3, viewFactory_SimpleNotificationsComponent1);
        this._NgFor_3_6 = new import12.Wrapper_NgFor(this._appEl_3.vcRef, this._TemplateRef_3_5, this.parentInjector.get(import13.IterableDiffers), this.ref);
        this._text_4 = this.renderer.createText(this._el_1, '\n        ', null);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._text_5
        ], [], []);
        return null;
    };
    _View_SimpleNotificationsComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import17.NgFor) && (3 === requestNodeIndex))) {
            return this._NgFor_3_6.context;
        }
        if (((token === import18.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._NgClass_1_3.context;
        }
        return notFoundResult;
    };
    _View_SimpleNotificationsComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1_0_0 = 'simple-notification-wrapper';
        this._NgClass_1_3.check_klass(currVal_1_0_0, throwOnChange, false);
        var currVal_1_0_1 = this.context.position;
        this._NgClass_1_3.check_ngClass(currVal_1_0_1, throwOnChange, false);
        this._NgClass_1_3.detectChangesInInputProps(this, this._el_1, throwOnChange);
        var currVal_3_0_0 = this.context.notifications;
        this._NgFor_3_6.check_ngForOf(currVal_3_0_0, throwOnChange, false);
        this._NgFor_3_6.detectChangesInInputProps(this, this._anchor_3, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this._NgClass_1_3.detectChangesInHostProps(this, this._el_1, throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_SimpleNotificationsComponent0;
}(import3.AppView));
function viewFactory_SimpleNotificationsComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_SimpleNotificationsComponent === null)) {
        (renderType_SimpleNotificationsComponent = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, styles_SimpleNotificationsComponent, {}));
    }
    return new _View_SimpleNotificationsComponent0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_SimpleNotificationsComponent0 = viewFactory_SimpleNotificationsComponent0;
var _View_SimpleNotificationsComponent1 = (function (_super) {
    __extends(_View_SimpleNotificationsComponent1, _super);
    function _View_SimpleNotificationsComponent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_SimpleNotificationsComponent1, renderType_SimpleNotificationsComponent, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_SimpleNotificationsComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import2.createRenderElement(this.renderer, null, 'simple-notification', import2.EMPTY_INLINE_ARRAY, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = import19.viewFactory_NotificationComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._NotificationComponent_0_4 = new import19.Wrapper_NotificationComponent(this.parent.parentInjector.get(import8.NotificationsService), this.parent.parentInjector.get(import20.DomSanitizer), this.parent.parentInjector.get(import21.NgZone));
        this._appEl_0.initComponent(this._NotificationComponent_0_4.context, [], compView_0);
        this._text_1 = this.renderer.createText(null, '\n            ', null);
        compView_0.create(this._NotificationComponent_0_4.context, [], null);
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [], []);
        return null;
    };
    _View_SimpleNotificationsComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import22.NotificationComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NotificationComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_SimpleNotificationsComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parent.context.timeOut;
        this._NotificationComponent_0_4.check_timeOut(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = this.parent.context.showProgressBar;
        this._NotificationComponent_0_4.check_showProgressBar(currVal_0_0_1, throwOnChange, false);
        var currVal_0_0_2 = this.parent.context.pauseOnHover;
        this._NotificationComponent_0_4.check_pauseOnHover(currVal_0_0_2, throwOnChange, false);
        var currVal_0_0_3 = this.parent.context.clickToClose;
        this._NotificationComponent_0_4.check_clickToClose(currVal_0_0_3, throwOnChange, false);
        var currVal_0_0_4 = this.parent.context.maxLength;
        this._NotificationComponent_0_4.check_maxLength(currVal_0_0_4, throwOnChange, false);
        var currVal_0_0_5 = this.parent.context.theClass;
        this._NotificationComponent_0_4.check_theClass(currVal_0_0_5, throwOnChange, false);
        var currVal_0_0_6 = this.parent.context.rtl;
        this._NotificationComponent_0_4.check_rtl(currVal_0_0_6, throwOnChange, false);
        var currVal_0_0_7 = this.parent.context.animate;
        this._NotificationComponent_0_4.check_animate(currVal_0_0_7, throwOnChange, false);
        var currVal_0_0_8 = this.context.index;
        this._NotificationComponent_0_4.check_position(currVal_0_0_8, throwOnChange, false);
        var currVal_0_0_9 = this.context.$implicit;
        this._NotificationComponent_0_4.check_item(currVal_0_0_9, throwOnChange, false);
        this._NotificationComponent_0_4.detectChangesInInputProps(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this._NotificationComponent_0_4.detectChangesInHostProps(this, this._el_0, throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_SimpleNotificationsComponent1.prototype.destroyInternal = function () {
        this._NotificationComponent_0_4.context.ngOnDestroy();
    };
    return _View_SimpleNotificationsComponent1;
}(import3.AppView));
function viewFactory_SimpleNotificationsComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_SimpleNotificationsComponent1(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=simple-notifications.component.ngfactory.js.map